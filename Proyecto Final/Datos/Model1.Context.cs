//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CAFETERIA2023Entities : DbContext
    {
        public CAFETERIA2023Entities()
            : base("name=CAFETERIA2023Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<DireccionCli> DireccionCli { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<TelefonoCli> TelefonoCli { get; set; }
        public virtual DbSet<TelefonoVen> TelefonoVen { get; set; }
        public virtual DbSet<Vendedor> Vendedor { get; set; }
        public virtual DbSet<VistaVendedores> VistaVendedores { get; set; }
        public virtual DbSet<VistaCliente> VistaCliente { get; set; }
        public virtual DbSet<VistaFactura> VistaFactura { get; set; }
        public virtual DbSet<TipoProducto> TipoProducto { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<VistaTopClientes> VistaTopClientes { get; set; }
        public virtual DbSet<VistaProductos> VistaProductos { get; set; }
    
        public virtual int DashboardDatos(ObjectParameter totalVentas, ObjectParameter nprod, ObjectParameter nVen, ObjectParameter nCli)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DashboardDatos", totalVentas, nprod, nVen, nCli);
        }
    
        public virtual ObjectResult<ProdPreferidos_Result> ProdPreferidos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProdPreferidos_Result>("ProdPreferidos");
        }
    
        public virtual ObjectResult<ProcProductosDelAnoActual_Result> ProcProductosDelAnoActual()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcProductosDelAnoActual_Result>("ProcProductosDelAnoActual");
        }
    
        public virtual ObjectResult<ProcProductosDelDiaActual_Result> ProcProductosDelDiaActual()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcProductosDelDiaActual_Result>("ProcProductosDelDiaActual");
        }
    
        public virtual ObjectResult<ProcTopProductosDelMes_Result> ProcTopProductosDelMes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProcTopProductosDelMes_Result>("ProcTopProductosDelMes");
        }
    }
}
